package padelmanager.view;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import padelmanager.model.Booking;
import padelmanager.model.PadelCourt;

/**
 * Cadro de diálogo para que o usuario seleccione de forma gráfica unha reserva
 * dunha lista
 * @author Profe de programación
 */
public class SelectBookingJDialog extends javax.swing.JDialog {
    // Atributos privados
    private boolean actionAccepted;
    private int selectedTeam;
    private ArrayList<Booking> bookings;

    /**
     * Indica se o usuario aceptou a selección da reserva
     * @return true se o usuario aceptou a selección
     */
    public boolean isActionAccepted() {
        return actionAccepted;
    }
    
    /**
     * Devolve o equipo seleccionado polo usuario
     * @return Número do equipo seleccionado (0 ou 1)
     */
    public int getSelectedTeam() {
        return selectedTeam;
    }
   
    /**
     * Obtén a lista de reservas que mostra o diálogo
     * @return Lista de reservas que se mostran
     */
    public ArrayList<Booking> getBookings() {
        return bookings;
    }
    
    /**
     * Establece a lista de reservas que hai que mostrar
     * @param bookings Lista de reservas que se queren mostrar
     */
    public void setBookings(ArrayList<Booking> bookings) {
        this.bookings = bookings;
        DefaultListModel listModel = new DefaultListModel();
        for (Booking booking:bookings) {
            listModel.addElement(booking.getDescription());
        }
        jListBookings.setModel(listModel);
    }
    
    /**
     * Obtén a reserva seleccionada
     * @return Reserva seleccionada da lista
     */
    public Booking getSelectedBooking() {
        return bookings.get(jListBookings.getSelectedIndex());
    }
    
    /**
     * Creates new form SelectBookingJDialog
     */
    public SelectBookingJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListBookings = new javax.swing.JList<>();
        jBtnCancel = new javax.swing.JButton();
        jBtnAccept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Selecciona o partido ao que te queres unir:");

        jListBookings.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListBookings.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListBookings);

        jBtnCancel.setText("Cancelar");
        jBtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelActionPerformed(evt);
            }
        });

        jBtnAccept.setText("Aceptar");
        jBtnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAcceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 140, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBtnAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCancel)
                    .addComponent(jBtnAccept))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAcceptActionPerformed
        if (jListBookings.isSelectionEmpty()) {
            // Se non se seleccionar ningunha mensaxe, infórmase do erro
            JOptionPane.showMessageDialog(this,
                    "Debes seleccionar unha reserva", "Partido", 
                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Se a pista da reserva é dobre, pedimos o número do equipo
            if (getSelectedBooking().getCourt().getType() == PadelCourt.DOUBLE) {
                selectedTeam = Integer.parseInt(JOptionPane.showInputDialog(this,
                        "Indica o equipo no que te queres apuntar (1/2)")) - 1;
            }
            // Marcamos que o usuario aceptou a acción e pechamos o formulario
            actionAccepted = true;
            this.dispose();
        }
    }//GEN-LAST:event_jBtnAcceptActionPerformed

    private void jBtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelActionPerformed
        // Marcamos que o usuario non aceptou a acción e pechamos o formulario
        actionAccepted = false;
        this.dispose();
    }//GEN-LAST:event_jBtnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAccept;
    private javax.swing.JButton jBtnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListBookings;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
